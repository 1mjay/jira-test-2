name: Create Jira Issue and Link to Epic
on:
  issues:
    types:
      - opened
jobs:
  create-issue:
    name: Create Jira Issue and Link to Epic
    runs-on: ubuntu-latest
    steps:
      - name: Login to Jira
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Parse Issue Form
        uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue_form.yml

      - name: Log Parsed Values
        run: |
          echo "Parsed Issue Form Values:"
          echo "Epic: ${{ steps.issue-parser.outputs.epic }}"
          echo "Branch: ${{ steps.issue-parser.outputs.branch }}"
          echo "Feature: ${{ steps.issue-parser.outputs.feature }}"

      - name: Convert Markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}
            ${{ github.event.issue.body }}
          mode: md2jira

      - name: Create Jira Issue (Story)
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: SCRUM
          issuetype: Story
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output-text }}"
          fields: |
            {
              "customfield_10037": "${{ github.actor }}"
            }

      - name: Link Story to Epic
        id: link-issue
        run: |
          STORY_ISSUE_KEY="${{ steps.create.outputs.issue }}"
          EPIC_ISSUE_KEY="${{ steps.issue-parser.outputs.epic }}"
          
          curl -X POST \
          -H "Content-Type: application/json" \
          -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
          -d '{
            "type": {
              "name": "Relates"
            },
            "inwardIssue": {
              "key": "'"${STORY_ISSUE_KEY}"'"
            },
            "outwardIssue": {
              "key": "'"${EPIC_ISSUE_KEY}"'"
            }
          }' "${{ secrets.JIRA_BASE_URL }}/rest/api/2/issueLink"

      - name: Log Create Issue Result
        if: always()
        run: |
          echo "Create Issue result:"
          echo "Outputs: ${{ toJSON(steps.create.outputs) }}"
          echo "Error: ${{ steps.create.error }}"

      - name: Create Branch
        run: |
          TICKET_NUMBER="${{ steps.create.outputs.issue }}"
          BRANCH_INPUT="${{ steps.issue-parser.outputs.branch }}"
          BRANCH_NAME="${BRANCH_INPUT}/${TICKET_NUMBER}"
          echo "Generated Branch Name: ${BRANCH_NAME}"
          git checkout -b "${BRANCH_NAME}"
          git push origin "${BRANCH_NAME}"
