name: Create Jira issue
on:
  issues:
    types:
      - opened
jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Issue Parser
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue_form.yml

      - name: Log Issue Parser
        run: |
          echo "All parser outputs:"
          echo "${{ toJSON(steps.issue-parser.outputs) }}"
          echo "Parent Key value:"
          echo "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
          echo "Branch value:"
          echo "${{ steps.issue-parser.outputs.issueparser_branch }}"
          echo "Raw issue body:"
          echo "${{ github.event.issue.body }}"'

      - name: Convert markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ${{ github.event.issue.body }}
          mode: md2jira

      - name: Create Issue
        id: create
        uses: atlassian/gajira-create@v3
        continue-on-error: true  # 에러가 나도 진행되도록
        with:
          project: SCRUM
          issuetype: Story
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output-text }}"
          fields: |
            {
              "parent": {"key": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"},
              "customfield_10037": "${{ github.actor }}"
            }

      - name: Log Create Issue Result  # 결과 로깅 추가
        if: always()  # 항상 실행
        run: |
          echo "Create Issue result:"
          echo "Success: ${{ steps.create.outcome == 'success' }}"
          echo "Error: ${{ steps.create.error }}"
          echo "Outputs: ${{ toJSON(steps.create.outputs) }}"

      - name: Log created issue
        run: echo "Jira Issue ${{ steps.issue-parser.outputs.parentKey }}/${{ steps.create.outputs.issue }} was created"

      - name: Checkout develop code
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Create branch with Ticket number
        run: |
          TICKET_NUMBER="${{ steps.create.outputs.issue }}"
          ISSUE_TITLE="${{ steps.issue-parser.outputs.issueparser_branch}}"
          BRANCH_NAME="dev/feature/$(echo ${ISSUE_TITLE} | sed 's/[^a-zA-Z0-9]/-/g')/#${TICKET_NUMBER}"
          git checkout -b ${BRANCH_NAME}
          git push origin ${BRANCH_NAME}

      - name: Update issue title
        uses: actions-cool/issues-helper@v3
        with:
          actions: "update-issue"
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "${{ steps.create.outputs.issue }} ${{ github.event.issue.title }}"
